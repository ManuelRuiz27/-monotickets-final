name: QA Cross-browser Matrix

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'tests/**'
      - '.github/workflows/qa.yml'
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'tests/**'
      - '.github/workflows/qa.yml'

jobs:
  e2e:
    name: E2E (${{ matrix.browser }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, msedge, firefox]
    env:
      CI: '1'
      HEADLESS: '1'
      BASE_URL_FRONTEND: ${{ secrets.BASE_URL_FRONTEND || 'http://frontend:3001' }}
      BASE_URL_BACKEND: ${{ secrets.BASE_URL_BACKEND || 'http://backend:3000' }}
      WA_WEBHOOK_URL: ${{ secrets.WA_WEBHOOK_URL || 'http://backend:3000/wa/webhook' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tests/package-lock.json

      - name: Install dependencies (tests)
        run: npm ci
        working-directory: tests

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
        working-directory: tests

      - name: Launch application stack
        run: |
          docker compose up -d database redis backend-api dashboard

      - name: Prepare smoke logs
        run: mkdir -p reports/smoke

      - name: Smoke - readiness gate
        env:
          BACKEND_URL: http://backend:3000/health
          FRONTEND_URL: http://frontend:3001/health
        run: |
          bash infra/check-readiness.sh | tee reports/smoke/readiness-${{ matrix.browser }}.log

      - name: Smoke - health endpoints
        env:
          BACKEND_URL: http://backend:3000/health
          FRONTEND_URL: http://frontend:3001/health
        run: |
          bash infra/check-services.sh | tee reports/smoke/services-${{ matrix.browser }}.log

      - name: Run E2E (${{ matrix.browser }})
        run: npx playwright test --config tests/playwright.config.ts --project=${{ matrix.browser }}
        working-directory: tests

      - name: Collect artifacts metadata
        run: npm run test:post
        working-directory: tests
        if: always()

      - name: Upload JUnit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-${{ matrix.browser }}
          path: reports/junit

      - name: Upload Playwright artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-artifacts-${{ matrix.browser }}
          path: tests/artifacts

      - name: Upload smoke logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-${{ matrix.browser }}
          path: reports/smoke

      - name: Teardown stack
        if: always()
        run: docker compose down
