version: "3.9"

x-backend-dependency: &backend-dependency
  depends_on:
    backend-api:
      condition: service_started

x-dev-env: &dev-env
  NODE_ENV: development
  NEXT_TELEMETRY_DISABLED: "1"

x-prod-env: &prod-env
  NODE_ENV: production
  NEXT_TELEMETRY_DISABLED: "1"

services:
  backend-api:
    extends:
      file: ./infra/docker-compose.yml
      service: backend-api
    networks:
      - monotickets_net

  pwa:
    <<: *backend-dependency
    build:
      context: ./frontend/pwa
    command: ["./node_modules/.bin/next", "dev", "-p", "3000"]
    working_dir: /app
    environment:
      <<: *dev-env
      NEXT_PUBLIC_API_URL: ${PWA_NEXT_PUBLIC_API_URL:-http://backend-api:8080}
      PORT: "3000"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/pwa:/app
      - pwa_node_modules:/app/node_modules
    networks:
      - monotickets_net

  dashboard:
    <<: *backend-dependency
    build:
      context: ./frontend/dashboard
    command: ["./node_modules/.bin/next", "dev", "-p", "3001"]
    working_dir: /app
    environment:
      <<: *dev-env
      NEXT_PUBLIC_API_URL: ${DASHBOARD_NEXT_PUBLIC_API_URL:-http://backend-api:8080}
      PORT: "3001"
    ports:
      - "3001:3001"
    volumes:
      - ./frontend/dashboard:/app
      - dashboard_node_modules:/app/node_modules
    networks:
      - monotickets_net

  pwa-prod:
    <<: *backend-dependency
    build:
      context: ./frontend/pwa
    command: ["./node_modules/.bin/next", "start", "-p", "3000"]
    working_dir: /app
    environment:
      <<: *prod-env
      NEXT_PUBLIC_API_URL: ${PWA_NEXT_PUBLIC_API_URL:-https://api.monotickets.mx}
      PORT: "3000"
    ports:
      - "3000:3000"
    networks:
      - monotickets_net
    healthcheck:
      test:
        ["CMD", "node", "-e", "fetch('http://localhost:3000/').then(r=>{if(r.status!==200)process.exit(1);}).catch(()=>process.exit(1));"]
      interval: 30s
      timeout: 5s
      retries: 3
    profiles:
      - prod

  dashboard-prod:
    <<: *backend-dependency
    build:
      context: ./frontend/dashboard
    command: ["./node_modules/.bin/next", "start", "-p", "3001"]
    working_dir: /app
    environment:
      <<: *prod-env
      NEXT_PUBLIC_API_URL: ${DASHBOARD_NEXT_PUBLIC_API_URL:-https://api.monotickets.mx}
      PORT: "3001"
    ports:
      - "3001:3001"
    networks:
      - monotickets_net
    healthcheck:
      test:
        ["CMD", "node", "-e", "fetch('http://localhost:3001/').then(r=>{if(r.status!==200)process.exit(1);}).catch(()=>process.exit(1));"]
      interval: 30s
      timeout: 5s
      retries: 3
    profiles:
      - prod

networks:
  monotickets_net:
    name: monotickets_net

volumes:
  pwa_node_modules:
  dashboard_node_modules:
