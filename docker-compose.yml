x-backend-dependency: &backend-dependency
  depends_on:
    backend-api:
      condition: service_started

x-dev-env: &dev-env
  NODE_ENV: development
  NEXT_TELEMETRY_DISABLED: "1"

x-prod-env: &prod-env
  NODE_ENV: production
  NEXT_TELEMETRY_DISABLED: "1"

services:
  database:
    extends:
      file: ./infra/docker-compose.yml
      service: database

  redis:
    extends:
      file: ./infra/docker-compose.yml
      service: redis

  backend-api:
    extends:
      file: ./infra/docker-compose.yml
      service: backend-api
    networks:
      monotickets_net:
        aliases:
          - backend

  pwa:
    <<: *backend-dependency
    image: node:20
    command: ["sh", "-c", "npm install && npm run dev -- --hostname 0.0.0.0 --port 3000"]
    working_dir: /app
    environment:
      <<: *dev-env
      NEXT_PUBLIC_API_URL: ${PWA_NEXT_PUBLIC_API_URL:-http://backend-api:8080}
      PORT: "3000"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/pwa:/app
      - pwa_node_modules:/app/node_modules
    networks:
      - monotickets_net

  dashboard:
    <<: *backend-dependency
    image: node:20
    command: ["sh", "-c", "npm install && npm run dev -- --hostname 0.0.0.0 --port 3001"]
    working_dir: /app
    environment:
      <<: *dev-env
      NEXT_PUBLIC_API_URL: ${DASHBOARD_NEXT_PUBLIC_API_URL:-http://backend-api:8080}
      PORT: "3001"
    ports:
      - "3001:3001"
    volumes:
      - ./frontend/dashboard:/app
      - dashboard_node_modules:/app/node_modules
    networks:
      monotickets_net:
        aliases:
          - frontend

  pwa-prod:
    <<: *backend-dependency
    image: node:20
    command: ["sh", "-c", "npm install && npm run build && npm run start -- --hostname 0.0.0.0 --port 3000"]
    working_dir: /app
    environment:
      <<: *prod-env
      NEXT_PUBLIC_API_URL: ${PWA_NEXT_PUBLIC_API_URL:-https://api.monotickets.mx}
      PORT: "3000"
    ports:
      - "3000:3000"
    networks:
      - monotickets_net
    volumes:
      - ./frontend/pwa:/app
      - pwa_node_modules:/app/node_modules
    healthcheck:
      test:
        ["CMD", "node", "-e", "fetch('http://localhost:3000/').then(r=>{if(r.status!==200)process.exit(1);}).catch(()=>process.exit(1));"]
      interval: 30s
      timeout: 5s
      retries: 3
    profiles:
      - prod

  dashboard-prod:
    <<: *backend-dependency
    image: node:20
    command: ["sh", "-c", "npm install && npm run build && npm run start -- --hostname 0.0.0.0 --port 3001"]
    working_dir: /app
    environment:
      <<: *prod-env
      NEXT_PUBLIC_API_URL: ${DASHBOARD_NEXT_PUBLIC_API_URL:-https://api.monotickets.mx}
      PORT: "3001"
    ports:
      - "3001:3001"
    networks:
      monotickets_net:
        aliases:
          - frontend-prod
    volumes:
      - ./frontend/dashboard:/app
      - dashboard_node_modules:/app/node_modules
    healthcheck:
      test:
        ["CMD", "node", "-e", "fetch('http://localhost:3001/').then(r=>{if(r.status!==200)process.exit(1);}).catch(()=>process.exit(1));"]
      interval: 30s
      timeout: 5s
      retries: 3
    profiles:
      - prod

  tests:
    build:
      context: ./tests
    container_name: monotickets_tests
    environment:
      BASE_URL_FRONTEND: ${BASE_URL_FRONTEND:-http://frontend:3001}
      BASE_URL_BACKEND: ${BASE_URL_BACKEND:-http://backend:3000}
      WA_WEBHOOK_URL: ${WA_WEBHOOK_URL:-http://backend:3000/wa/webhook}
      TEST_TIMEOUT: ${TEST_TIMEOUT:-300000}
      HEADLESS: ${HEADLESS:-1}
      CI: ${CI:-1}
    depends_on:
      backend-api:
        condition: service_started
      dashboard:
        condition: service_started
      pwa:
        condition: service_started
    networks:
      - monotickets_net
    volumes:
      - ./tests:/app/tests:ro
      - ./tests/testsprite.config.js:/app/testsprite.config.js:ro
      - ./reports:/app/reports
      - ./coverage:/app/coverage
      - ./tests/artifacts:/app/tests/artifacts

  metabase:
    image: metabase/metabase:latest
    container_name: monotickets_metabase
    restart: unless-stopped
    environment:
      MB_SITE_URL: ${METABASE_SITE_URL:-http://localhost:3002}
      MB_DB_FILE: /metabase-data/metabase.db
    ports:
      - "3002:3000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - monotickets_net
    volumes:
      - metabase_data:/metabase-data

networks:
  monotickets_net:
    name: monotickets_net

volumes:
  pg_data:
  uploads_local:
  pdfs_local:
  media_local:
  pwa_node_modules:
  dashboard_node_modules:
  metabase_data:
